#![allow(non_snake_case)]

use super::event::*;
use windows::Win32::UI::Input::KeyboardAndMouse::*;

// ------------------------------------------------------------ Mouse Button Pressed Event ------------------------------------------------------------- //
pub struct MouseButtonPressedEvent
{
    m_Button:  VIRTUAL_KEY,
}

impl Event for MouseButtonPressedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::MouseButtonPressed;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "MouseButtonPressed";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::MOUSE | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: {:?}", self.GetName(), self.GetMouseButton());
    }
}

impl MouseButtonPressedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(button: VIRTUAL_KEY) -> MouseButtonPressedEvent
    {
        return MouseButtonPressedEvent{ m_Button: button };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetMouseButton(&self) -> VIRTUAL_KEY
    {
        return self.m_Button;
    }
}

// ----------------------------------------------------------- Mouse Button Released Event ------------------------------------------------------------- //
pub struct MouseButtonReleasedEvent
{
    m_Button:  VIRTUAL_KEY,
}

impl Event for MouseButtonReleasedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::MouseButtonReleased;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "MouseButtonReleased";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::MOUSE | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: {:?}", self.GetName(), self.GetMouseButton());
    }
}

impl MouseButtonReleasedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(button: VIRTUAL_KEY) -> MouseButtonReleasedEvent
    {
        return MouseButtonReleasedEvent{ m_Button: button };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetMouseButton(&self) -> VIRTUAL_KEY
    {
        return self.m_Button;
    }
}

// ---------------------------------------------------------------- Mouse Moved Event ------------------------------------------------------------------ //
pub struct MouseMovedEvent
{
    m_X:       u32,
    m_Y:       u32,
}

impl Event for MouseMovedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::MouseMoved;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "MouseMoved";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::MOUSE | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: x = {:?}, y = {:?}", self.GetName(), self.GetX(), self.GetY());
    }
}

impl MouseMovedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(x: u32, y: u32) -> MouseMovedEvent
    {
        return MouseMovedEvent{ m_X: x, m_Y: y };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetX(&self) -> u32
    {
        return self.m_X;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetY(&self) -> u32
    {
        return self.m_Y;
    }
}

// -------------------------------------------------------------- Mouse Scrolled Event ----------------------------------------------------------------- //
pub struct MouseScrolledEvent
{
    m_XOffset: i32,
    m_YOffset: i32,
}

impl Event for MouseScrolledEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::MouseScrolled;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "MouseScrolled";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::MOUSE | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: x = {:?}, y = {:?}", self.GetName(), self.GetXOffset(), self.GetYOffset());
    }
}

impl MouseScrolledEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(xOffset: i32, yOffset: i32) -> MouseScrolledEvent
    {
        return MouseScrolledEvent{ m_XOffset: xOffset, m_YOffset: yOffset };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetXOffset(&self) -> i32
    {
        return self.m_XOffset;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetYOffset(&self) -> i32
    {
        return self.m_YOffset;
    }
}