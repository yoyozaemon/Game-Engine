#![allow(non_snake_case)]

use super::event::*;
use windows::Win32::UI::Input::KeyboardAndMouse::*;

// ----------------------------------------------------------- Key Pressed Event ------------------------------------------------------------- //
pub struct KeyPressedEvent
{
    m_KeyCode:     VIRTUAL_KEY,
    m_RepeatCount: u32,
}

impl Event for KeyPressedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::KeyPressed;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "KeyPressed";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::KEYBOARD | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: {:?}, {}", self.GetName(), self.GetKeyCode(), self.GetRepeatCount());
    }
}

impl KeyPressedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(key: VIRTUAL_KEY, repeatCount: u32) -> KeyPressedEvent
    {
        return KeyPressedEvent{ m_KeyCode: key, m_RepeatCount: repeatCount };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetKeyCode(&self) -> VIRTUAL_KEY
    {
        return self.m_KeyCode;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetRepeatCount(&self) -> u32
    {
        return self.m_RepeatCount;
    }
}

// ----------------------------------------------------------- Key Released Event ------------------------------------------------------------- //
pub struct KeyReleasedEvent
{
    KeyCode: VIRTUAL_KEY,
}

impl Event for KeyReleasedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::KeyReleased;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "KeyReleased";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::KEYBOARD | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: {:?}", self.GetName(), self.GetKeyCode());
    }
}

impl KeyReleasedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(key: VIRTUAL_KEY) -> KeyReleasedEvent
    {
        return KeyReleasedEvent{ KeyCode: key };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetKeyCode(&self) -> VIRTUAL_KEY
    {
        return self.KeyCode;
    }
}

// ----------------------------------------------------------- Key Typed Event ------------------------------------------------------------- //
pub struct KeyTypedEvent
{
    Character: char,
}

impl Event for KeyTypedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetType(&self) -> EventType
    {
        return EventType::KeyTyped;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetName(&self) -> &str
    {
        return "KeyTyped";
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn GetCategoryFlags(&self) -> EventCategory
    {
        return EventCategory::KEYBOARD | EventCategory::INPUT;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn AsAny(&self) -> &dyn std::any::Any
    {
        return self;
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    fn ToString(&self) -> String
    {
        return format!("{}: {:?}", self.GetName(), self.GetChar());
    }
}

impl KeyTypedEvent
{
    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn Create(character: char) -> KeyTypedEvent
    {
        return KeyTypedEvent{ Character: character };
    }

    // ------------------------------------------------------------------------------------------------------------------------------------------------------
    pub fn GetChar(&self) -> char
    {
        return self.Character;
    }
}